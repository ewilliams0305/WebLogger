using System.Collections.Generic;
using WebLogger;

namespace WebLogger.Generators
{
    internal static class Constants
    {
        public const string Namespace = "WebLogger";

        public const string CommandInterface = "WebLogger.IWebLoggerCommand";

        public const string CommandHandlerAttributeFile = @"CommandHandlerAttribute.g.cs";
        public const string CommandHandlerAttributeName = "WebLogger.Generators.CommandHandlerAttribute";
        public const string CommandHandlerAttributeValue =
@"
// <auto-generated/>

namespace WebLogger.Generators
{
    /// <summary>
    /// When applied to a method on a partial class the class will be converted to an IWebLoggerCommand
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""WebLogger"", ""1.1.3"")]
    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = false)]
    public class CommandHandlerAttribute : global::System.Attribute
    {
        /// <summary>
        /// Name of the command used as the command key
        /// </summary>
        public string Command { get; private set; }
        /// <summary>
        /// Description of the command displayed in the output of the help command.
        /// </summary>
        public string Description { get; private set; }
        /// <summary>
        /// Message that describes the usage for the command.
        /// </summary>
        public string Help { get; private set; }

        /// <summary>
        /// Default constructor sets all required properties.
        /// </summary>
        /// <param name=""command""></param>
        /// <param name=""description""></param>
        /// <param name=""help""></param>
        public CommandHandlerAttribute(
            string command,
            string description,
            string help)
        {
            Command = command;
            Description = description;
            Help = help;
        }
    }
}";
        public const string WebLoggerCommandAttributeFile = @"WebLoggerCommandAttribute.g.cs";
        public const string WebLoggerCommandAttributeName = @"WebLogger.Generators.WebLoggerCommandAttribute";
        public const string WebLoggerCommandAttributeValue =
@"
// <auto-generated/>

namespace WebLogger.Generators
{
    /// <summary>
    /// When applied to a partial class the class will be converted to an IWebLoggerCommand.
    /// The command handler will need to be marked with the CommandHandlerAttriibute
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""WebLogger"", ""1.1.3"")]
    [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false)]
    public class WebLoggerCommandAttribute : global::System.Attribute
    {
    }
}";
        public const string CommandStoreAttributeFile = @"CommandStoreAttribute.g.cs";
        public const string CommandStoreAttributeName = @"WebLogger.Generators.CommandStoreAttribute";
        public const string CommandStoreAttributeValue =
@"
// <auto-generated/>

namespace WebLogger.Generators
{
    /// <summary>
    /// When applied to a partial class the class will implment the IStoredCommands interface.
    /// Each child method marked with the CommandStoreTarget attribute will be added to the classes command store.
    /// </summary>
    [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false)]
    public sealed class CommandStoreAttribute : global::System.Attribute
    {

    }
}";
        public const string TargetCommandAttributeFile = @"TargetCommandAttribute.g.cs";
        public const string TargetCommandAttributeName = @"WebLogger.Generators.TargetCommand";
        public const string TargetCommandAttributeValue =
@"
// <auto-generated/>

namespace WebLogger.Generators
{
    /// <summary>
    /// When applied to a method on a partial class Targeted with WebLoggerCommandStoreAttribute the method will be added to the
    /// instance command store.
    /// </summary>
    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = false)]
    public sealed class TargetCommand : global::System.Attribute
    {
        /// <summary>
        /// Name of the command used as the command key
        /// </summary>
        public string Command { get; private set; }
        /// <summary>
        /// Description of the command displayed in the output of the help command.
        /// </summary>
        public string Description { get; private set; }
        /// <summary>
        /// Message that describes the usage for the command.
        /// </summary>
        public string Help { get; private set; }

        /// <summary>
        /// Default constructor sets all required properties.
        /// </summary>
        /// <param name=""command""></param>
        /// <param name=""description""></param>
        /// <param name=""help""></param>
        public TargetCommand(
            string command,
            string description,
            string help)
        {
            Command = command;
            Description = description;
            Help = help;
        }
    }
}";

        public const string StoredCommandsInterfaceFile = @"IStoredCommands.g.s";
        public const string StoredCommandsInterfaceName = @"WebLogger.Generators.IStoredCommands";
        public const string StoredCommandsInterfaceValue =
@"
// <auto-generated/>

namespace WebLogger.Generators
{
    /// <summary>
    /// This auto generated interface provides one method to return the stored commands.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""WebLogger"", ""1.1.4"")]
    public interface IStoredCommands
    {
        /// <summary>
        /// Returns all stored commands from the instance of the command store class.
        /// </summary>
        /// <returns></returns>
        IEnumerable<IWebLoggerCommand> GetStoredCommands();
    }
}";
        public const string StoredCommandsInterfaceExtensionsFile = @"StoredCommandsInterfaceExtensions.g.s";
        public const string StoredCommandsInterfaceExtensionsValue =
@"
// <auto-generated/>

namespace WebLogger.Generators
{
    /// <summary>
    /// Extension methods to register stored commands.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""WebLogger"", ""1.1.4"")]
    public static class StoreCommandsInterfaceExtensions
    {
        /// <summary>
        /// Registers all the stored commands with the provided weblogger
        /// </summary>
        /// <param name=""storedCommandsInterface"">Command store</param>
        /// <param name=""logger"">logger to register commands.</param>
        /// <returns>same instance to chain the methods together</returns>
        public static IStoredCommands RegisterCommands(this IStoredCommands storedCommands, IWebLogger logger)
        {
            var commands = storedCommands.GetStoredCommands();

            foreach (var webLoggerCommand in commands)
            {
                logger.RegisterCommand(webLoggerCommand);
            }

            return storedCommands;
        }

        /// <summary>
        /// Registers all the commands in the provided command store.
        /// </summary>
        /// <param name=""logger"">logger to register commands.</param>
        /// <param name=""storedCommandsInterface"">Command store</param>
        /// <returns>same instance to chain the methods together</returns>
        public static IWebLogger RegisterCommandStore(this IWebLogger logger, IStoredCommands storedCommands)
        {
            var commands = storedCommands.GetStoredCommands();

            foreach (var webLoggerCommand in commands)
            {
                logger.RegisterCommand(webLoggerCommand);
            }

            return logger;
        }
    }
}";
    }
}




